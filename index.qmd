---
title: "Weather forecast in Montpellier"
---


```{python}
    #| echo: false
    #| warning: false
    from IPython.display import display, HTML
    import json
    from datetime import datetime, timedelta
    #import pandas as pd
    #import plotly.express as px
    import numpy as np
    #import pooch
    #import zipfile
    import requests
    #import schedule
    import time
    from dateutil.relativedelta import relativedelta
    #
    #def store_data(response_data):
    #    timestamp = time.time()
    #    with open('data.json', 'w') as file:
    #        json.dump({'timestamp': timestamp, 'data': response_data}, file)
    #
    #def should_make_api_call():
    #    try:
    #        with open('data.json', 'r') as file:
    #            data = json.load(file)
    #            last_timestamp = data.get('timestamp', 0)
    #            now_timestamp = timestamp = time.time()
    #            return (now_timestamp - last_timestamp) > 90  # 3600 seconds = 1 #hour
    #    except (FileNotFoundError, json.JSONDecodeError):
    #        # File doesn't exist or cannot be decoded, make a new API call
    #        return True
    ###
    #if should_make_api_call():
    #    # Make the API request
    #    current_time=datetime.now()
    #    response = requests.get( f"https://api.open-meteo.com/v1/forecast?latitude=43.6109&longitude=3.8763&hourly=wind_speed_10m&daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,wind_direction_10m_dominant&timezone=Europe%2FBerlin")
    #
    #    if response.status_code == 200:
    #        response_data = response.json()
    #        # Process and store the data
    #        store_data(response_data)
    #    else:
    #        print(f"Error: {response.status_code}")
    #else:
    #    # Use the cached data
    #    with open('data.json', 'r') as file:
    #        data = json.load(file)
    #        response_data = data.get('data', {})
    #        current_time=datetime.utcfromtimestamp(data.get('timestamp', 0))

    #def request_data():
    #    response = requests.get( f"https://api.open-meteo.com/v1/forecast?latitude=43.6109&longitude=3.8763&hourly=wind_speed_10m&daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,wind_direction_10m_dominant&timezone=Europe%2FBerlin")
    #    response.json()
    #    current_time=datetime.now()
    #
    #schedule.every(1).minutes.do(request_data)
    #while True:
    #    schedule.run_pending()
    #    time.sleep(1)
    response = requests.get( f"https://api.open-meteo.com/v1/forecast?latitude=43.6109&longitude=3.8763&hourly=wind_speed_10m&daily=weather_code,temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,wind_direction_10m_dominant&timezone=Europe%2FBerlin")
    data=response.json()
    current_time=datetime.now()



```


```{python}
#| echo: false
#| warning: false
json_string = json.dumps(data)  # Convert Python dictionary to a JSON string
t = []
t2=[]
wind_day=[]
tabday=[]
tabmonth=[]
for time, speed in zip(data["hourly"]["time"], data["hourly"]["wind_speed_10m"]):
    day = time.split("T")[0]  # Extraire la partie "jour" de la date et de l'heure
    hour = time.split("T")[1]
    t.append(speed)
    t2.append(hour)
    if hour == '23:00':
        wind_day.append(np.mean(t))
        tabday.append(day)
        t=[]  

nameday=[]
imgsrc=[]
for i in range (7):
# Convertir la chaîne de date en un objet datetime
    date_obj = datetime.strptime(tabday[i], '%Y-%m-%d')

# Obtenir le jour de la semaine (en anglais)
    nameday.append(date_obj.strftime("%A"))
    wind_day[i]=int(round(wind_day[i], 0))
    tabmonth.append(str(date_obj.day) +" "+ date_obj.strftime("%B"))


######
noms_images = ["0.svg", "1-2.svg", "3.svg", "4-10-11-12-28-40-41-42-43-44-45-46-47-48-49.svg",
    "5.svg", "6-7-8-9-30-31-32-33-34-35.svg", "13-17-29-95-96-97-98-99.svg",
    "14-15-16-20-50-51-52-53-54-55-56-57-58-59.svg", "18-19.svg", "21-91.svg",
    "22-23-24-26-27-67-68-69-83-84-93-94.svg", "25-36-37-38-39-70-71-72-73-74-75-76-77-78-79-85-86-87-88.svg",
    "27-89-90.svg", "60-61-62-63-64-65-66-80-81-82-92.svg", "97.svg"]

association_images_chiffres = {}
tabimg=[]
# Associer chaque chiffre à l'image
for chiffre in (data["daily"]["weather_code"]):
    for nom_image in noms_images:
        if str(chiffre) in nom_image:
            association_images_chiffres[chiffre] = []
            association_images_chiffres[chiffre].append(nom_image)
            tabimg.append(nom_image)
            break

# Afficher le résultat
######



#TABLEAU METEO

html_code = f"""
<head>
    <link rel="stylesheet" href="styles.css">
</head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">


<table border="1" cellspacing="10">
    <!-- Ligne 1 -->
    <tr title="Date" style="background-color: rgb(255,184,77)">
        <th>    
            {nameday[0]}
            <br>Today
            <br>
        </th>
        <th>
             {nameday[1]} 
            <br>Tomorrow
            <br> 
        </th>
        <th>
             {nameday[2]} 
            <br>{tabmonth[2]}
            <br>
        </th>
        <th>
             {nameday[3]} 
            <br>{tabmonth[3]}
            <br>
        </th>
        <th>
             {nameday[4]} 
            <br>{tabmonth[4]}
            <br>
        </th>
                <th>
             {nameday[5]} 
            <br>{tabmonth[5]}
            <br>
        </th>
        <th>
             {nameday[6]} 
            <br>{tabmonth[6]}
            <br>
        </th>
    </tr>
    <!-- Ligne Images svg -->
        <tr title="Date" style="background-color: rgb(70, 130, 180)">
        <td>
            <img src="docs/{tabimg[0]}" width="100px" height="75px">
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[1]}" width="100px" height="75px">
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[2]}" width="100px" height="75px"> 
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[3]}" width="100px" height="75px"> 
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[4]}" width="100px" height="75px"> 
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[5]}" width="100px" height="75px"> 
            <br>
        </td>
        <td>
            <img src="docs/{tabimg[6]}" width="100px" height="75px"> 
            <br>
        </td>
        
    </tr>
    <!-- Ligne 2 -->
    <tr title="Temperatures min- max" style="background-color: rgb(255, 192, 203)">
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][0]}°
            <br> Max : {data["daily"]["temperature_2m_max"][0]}°
            <br>
        </td>
        <td>
            Temperatures  
            <br> Min :{data["daily"]["temperature_2m_min"][1]}°
            <br> Max :{data["daily"]["temperature_2m_max"][1]}°
            <br>
        </td>
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][2]}°
            <br> Max :{data["daily"]["temperature_2m_max"][2]}°
            <br>
        </td>
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][3]}°
            <br> Max:{data["daily"]["temperature_2m_max"][3]}°
            <br>
        </td>
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][4]}°
            <br> Max :{data["daily"]["temperature_2m_max"][4]}°
            <br>
        </td>
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][5]}°
            <br> Max :{data["daily"]["temperature_2m_max"][5]}°
            <br>
        </td>
        <td>
            Temperatures 
            <br> Min :{data["daily"]["temperature_2m_min"][6]}°
            <br> Max :{data["daily"]["temperature_2m_max"][6]}°
            <br>
        </td>
    </tr>

    <!-- Ligne 3 -->
    <tr title="Vent moyen et direction moyenne" style="background-color: rgb(255, 235, 235)">

        <td>
            {wind_day[0]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][0]}deg); display: inline-block; margin: 0 auto;"> 
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div> 
            <br>
        </td>


        <td>
            {wind_day[1]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][1]}deg); display: inline-block; margin: 0 auto;">
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div>
            <br>
        </td>


        <td>
            {wind_day[2]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][2]}deg); display: inline-block; margin: 0 auto;">
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div>
            <br>
        </td>


        <td>
            {wind_day[3]} km/h
            <br> Direction :
                <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][3]}deg); display: inline-block; margin: 0 auto;">

                    <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
                    </div>
            </div>
            <br>
        </td>


        <td>
            {wind_day[4]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][4]}deg); display: inline-block; margin: 0 auto;">
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div>
            <br>
        </td>
        <td>
            {wind_day[5]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][5]}deg); display: inline-block; margin: 0 auto;">
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div> 
            <br>
        </td>
        <td>
            {wind_day[6]} km/h
            <br> Direction : 
            <div style="width: 13px; height: 13px; overflow: hidden; transform: rotate({data["daily"]["wind_direction_10m_dominant"][6]}deg); display: inline-block; margin: 0 auto;">
                
                <div style="width: 11px; height: 11px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 15px solid black;">
            
                </div>
            </div> 
            <br>
        </td>
    </tr>



    <!-- Ligne 4 -->

    <tr title="Vent moyen et direction moyenne" style="background-color: rgb(135, 206, 250)">
    
        <td>
            Precipitation <br>
            <img src="docs/humidity.svg" width="20px" height="15px"> 
            {data["daily"]["precipitation_sum"][0]} mm
        </td>
        <td>
            Precipitation <br>
            <img src="docs/humidity.svg" width="20px" height="15px">
            {data["daily"]["precipitation_sum"][1]} mm
        </td>
        <td>
            Precipitation <br>
            <img src="docs/humidity.svg" width="20px" height="15px">
            {data["daily"]["precipitation_sum"][2]} mm
        </td>
        <td>
            Precipitation <br>
            <img src="docs/humidity.svg" width="20px" height="15px">
            {data["daily"]["precipitation_sum"][3]} mm
        </td>
        <td>
            Precipitation<br>
            <img src="docs/humidity.svg" width="20px" height="15px">
            {data["daily"]["precipitation_sum"][4]} mm
        </td>
        <td>
            Precipitation<br>
            <img src="docs/humidity.svg" width="20px" height="15px"> 
            {data["daily"]["precipitation_sum"][5]} mm
        </td>
        <td>
            Precipitation<br>
            <img src="docs/humidity.svg" width="20px" height="15px">
             {data["daily"]["precipitation_sum"][6]} mm
        </td>
    </tr>
</table>
"""

display(HTML(html_code))
```

```{python}
#| echo: false
#| warning: false

CT=current_time.replace(microsecond=0)
print(f"Computation was performed at : {CT} (GMT)")
```

Sources are: <a href="https://open-meteo.com/
">Open meteo</a>
